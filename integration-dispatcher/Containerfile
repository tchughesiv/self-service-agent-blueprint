# Multi-stage build for Integration Dispatcher
FROM python:3.12-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install uv for fast package management
RUN pip install uv

# Copy shared database first
WORKDIR /app
COPY shared-db ./shared-db/

# Copy project files
WORKDIR /app/integration-dispatcher
COPY integration-dispatcher/pyproject.toml ./
COPY integration-dispatcher/uv.lock ./
COPY integration-dispatcher/src/ ./src/

# Install dependencies
RUN uv sync --frozen

# Production stage
FROM python:3.12-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r integration && useradd -r -g integration integration

# Copy from builder
WORKDIR /app
COPY --from=builder /app/shared-db /app/shared-db
COPY --from=builder /app/integration-dispatcher/.venv /app/.venv
COPY --from=builder /app/integration-dispatcher/src /app/integration-dispatcher/src

# Set up environment
ENV PATH="/app/.venv/bin:$PATH"
ENV PYTHONPATH="/app/shared-db/src:/app/integration-dispatcher/src:$PYTHONPATH"

# Change ownership
RUN chown -R integration:integration /app

# Switch to non-root user
USER integration

# Expose port
EXPOSE 8080


# Run the application
WORKDIR /app/integration-dispatcher
CMD ["python", "-m", "integration_dispatcher.main"]
