{{- if and .Values.requestManagement.enabled .Values.requestManagement.serviceMesh.enabled (eq .Values.requestManagement.externalAccess.method "istio") .Values.requestManagement.istio.gateway.enabled }}
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: {{ include "self-service-agent.fullname" . }}-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "self-service-agent.labels" . | nindent 4 }}
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    {{- range .Values.requestManagement.istio.gateway.hosts }}
    - {{ . | quote }}
    {{- end }}
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: {{ include "self-service-agent.fullname" . }}-tls-cert
    hosts:
    {{- range .Values.requestManagement.istio.gateway.hosts }}
    - {{ . | quote }}
    {{- end }}
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ include "self-service-agent.fullname" . }}-vs
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "self-service-agent.labels" . | nindent 4 }}
spec:
  hosts:
  {{- range .Values.requestManagement.istio.gateway.hosts }}
  - {{ . | quote }}
  {{- end }}
  gateways:
  - {{ include "self-service-agent.fullname" . }}-gateway
  http:
  # Request Manager API routes
  - match:
    - uri:
        prefix: "/api/v1/"
    route:
    - destination:
        host: {{ include "self-service-agent.fullname" . }}-request-manager.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 80
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
  # Health check routes
  - match:
    - uri:
        exact: "/health"
    route:
    - destination:
        host: {{ include "self-service-agent.fullname" . }}-request-manager.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 80
  # Integration management API routes
  - match:
    - uri:
        regex: "/api/v1/users/.*/integrations.*"
    route:
    - destination:
        host: {{ include "self-service-agent.fullname" . }}-integration-dispatcher.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 80
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
  - match:
    - uri:
        regex: "/api/v1/users/.*/deliveries.*"
    route:
    - destination:
        host: {{ include "self-service-agent.fullname" . }}-integration-dispatcher.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 80
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
  # CloudEvent webhook routes (for external tools)
  - match:
    - uri:
        prefix: "/webhook/"
    route:
    - destination:
        host: {{ include "self-service-agent.fullname" . }}-request-manager.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 80
    headers:
      request:
        add:
          x-forwarded-proto: https
# DestinationRule removed - Knative handles load balancing automatically
# This was causing interference with Kafka broker event delivery
{{- end }}
