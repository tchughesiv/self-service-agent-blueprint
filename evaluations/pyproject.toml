[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "conversation-evaluations"
version = "0.1.0"
description = "Comprehensive conversation evaluation framework for AI agents"
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.12"
authors = [
    { name = "Self-Service Agent Blueprint Team" }
]
keywords = ["ai", "conversation", "evaluation", "deepeval", "chatbot"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Testing",
]

dependencies = [
    # Core evaluation framework
    "deepeval>=3.3.9",
    # LLM integration
    "openai>=1.99.0",
]

[project.optional-dependencies]
# Development dependencies for testing
dev = [
    "pytest>=8.4.0",
    "black>=25.1.0",
    "flake8>=7.3.0",
    "isort>=5.13.0",
]

# Complete development environment
all = [
    "conversation-evaluations[dev]",
]

[project.scripts]
# Main evaluation commands
evaluate = "evaluate:main"
run-conversations = "run_conversations:main"
generate-conversations = "generator:main"
deep-eval = "deep_eval:main"

[project.urls]
Homepage = "https://github.com/mhdawson/self-service-agent-blueprint"
Repository = "https://github.com/mhdawson/self-service-agent-blueprint"
Issues = "https://github.com/mhdawson/self-service-agent-blueprint/issues"
Documentation = "https://github.com/mhdawson/self-service-agent-blueprint/tree/main/evaluations"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/pyproject.toml",
]

# Development tool configurations
[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["helpers"]
known_third_party = ["deepeval", "openai"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "deepeval.*",
]
ignore_missing_imports = true
